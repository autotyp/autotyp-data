description: >-
  Grammatical marker exemplars properties (based on the data from `GrammaticalMarkers`),
  aggregated per language
kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
data: table
counts:
  n_languages: 472
  n_variables: 40
fields: 
  LID:
    description: >-
      Unique language ID
    kind: manual data entry
    data: integer
  # -- end of LID

  Glottocode:
    description: >-
      Glottolog ID
    kind: manual data entry
    data: string
  # -- end of Glottocode

  Language:
    description: >-
      In this database a language is actually a dialect or variety, in that
      individual dialects are entered as languages. That is, each language has
      its own ID number (the 'LID') distinct from that of the pan-dialectal
      language:e.g. LID 87 German, 1227 Upper Austrian German, 1295 Berlin
      German, 1310 Zürich German, 2845 Old High German, etc. (The pan-dialectal
      language is identified as the lowest taxonomic level, the `dialect group',
      but this information is incomplete in many areas and has not been included
      in the current release.) The general criterion for a separate language
      record in the database is that it has a distinct property in at least one
      of the typological variables that we survey; this may or may not coincide
      with sociolinguistic criteria.
    kind: manual data entry
    data: string
  # -- end of Language

  CaseMarkerMorphemeType:
    description: >-
      Value of `GrammaticalMarkers::MarkerMorphemeType` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "formative": >-
        Marker of a category that cannot occur as an independent part of speech unit in
        the syntax, but instead grammatically requires some host.
      "PoSWd": >-
        A syntactic unit that has its own part of speech (PoS) category. Depending on the
        diversity of grammatical words (g-word) in a language (see “word_type” database),
        this may or may not coincide with the g-word defined as ‘terminal node’. If g-
        word domains differ, “PoSWd” as used here refers to the one domain that has
        a PoS label attached to it. What counts is the syntactic behavior, e.g. if an
        element behaves like a verb but is defective morphologically, it still has the
        PoS label ‘verb’ (see for example Quileute negation ‘é’, which behaves like a verb
        syntactically even thought its inflectional paradigm is defective).
  # -- end of CaseMarkerMorphemeType

  TenseMarkerMorphemeType:
    description: >-
      Value of `GrammaticalMarkers::MarkerMorphemeType` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "formative": >-
        Marker of a category that cannot occur as an independent part of speech unit in
        the syntax, but instead grammatically requires some host.
      "PoSWd": >-
        A syntactic unit that has its own part of speech (PoS) category. Depending on the
        diversity of grammatical words (g-word) in a language (see “word_type” database),
        this may or may not coincide with the g-word defined as ‘terminal node’. If g-
        word domains differ, “PoSWd” as used here refers to the one domain that has
        a PoS label attached to it. What counts is the syntactic behavior, e.g. if an
        element behaves like a verb but is defective morphologically, it still has the
        PoS label ‘verb’ (see for example Quileute negation ‘é’, which behaves like a verb
        syntactically even thought its inflectional paradigm is defective).
  # -- end of TenseMarkerMorphemeType

  NegationMarkerMorphemeType:
    description: >-
      Value of `GrammaticalMarkers::MarkerMorphemeType` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "formative": >-
        Marker of a category that cannot occur as an independent part of speech unit in
        the syntax, but instead grammatically requires some host.
      "PoSWd": >-
        A syntactic unit that has its own part of speech (PoS) category. Depending on the
        diversity of grammatical words (g-word) in a language (see “word_type” database),
        this may or may not coincide with the g-word defined as ‘terminal node’. If g-
        word domains differ, “PoSWd” as used here refers to the one domain that has
        a PoS label attached to it. What counts is the syntactic behavior, e.g. if an
        element behaves like a verb but is defective morphologically, it still has the
        PoS label ‘verb’ (see for example Quileute negation ‘é’, which behaves like a verb
        syntactically even thought its inflectional paradigm is defective).
  # -- end of NegationMarkerMorphemeType

  NounPluralMarkerMorphemeType:
    description: >-
      Value of `GrammaticalMarkers::MarkerMorphemeType` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "formative": >-
        Marker of a category that cannot occur as an independent part of speech unit in
        the syntax, but instead grammatically requires some host.
  # -- end of NounPluralMarkerMorphemeType

  CaseMarkerIsPersonPortmanteau:
    description: >-
      Value of `GrammaticalMarkers::MarkerIsPersonPortmanteau` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerIsPersonPortmanteau

  TenseMarkerIsPersonPortmanteau:
    description: >-
      Value of `GrammaticalMarkers::MarkerIsPersonPortmanteau` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerIsPersonPortmanteau

  NegationMarkerIsPersonPortmanteau:
    description: >-
      Value of `GrammaticalMarkers::MarkerIsPersonPortmanteau` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerIsPersonPortmanteau

  NounPluralMarkerIsPersonPortmanteau:
    description: >-
      Value of `GrammaticalMarkers::MarkerIsPersonPortmanteau` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerIsPersonPortmanteau

  CaseMarkerHostRestriction:
    description: >-
      Value of `GrammaticalMarkers::MarkerHostRestriction` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "restricted": >-
        Is restricted to a specific type of host. When descriptions are silent about
        the range of hosts that a marker can combine with, but analyze the marker as an
        “affix”, we assume it is restricted.
      "semi-restricted": >-
        Can occur with some, but not all host elements (so, NOT a ‘phrasal affix’, but
        rather simply a ‘particle’-like formative that has some degree of selectional
        restrictions). Allows at least two distinct hosts (in terms of their parts of
        speech categories)
  # -- end of CaseMarkerHostRestriction

  TenseMarkerHostRestriction:
    description: >-
      Value of `GrammaticalMarkers::MarkerHostRestriction` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "restricted": >-
        Is restricted to a specific type of host. When descriptions are silent about
        the range of hosts that a marker can combine with, but analyze the marker as an
        “affix”, we assume it is restricted.
      "semi-restricted": >-
        Can occur with some, but not all host elements (so, NOT a ‘phrasal affix’, but
        rather simply a ‘particle’-like formative that has some degree of selectional
        restrictions). Allows at least two distinct hosts (in terms of their parts of
        speech categories)
  # -- end of TenseMarkerHostRestriction

  NegationMarkerHostRestriction:
    description: >-
      Value of `GrammaticalMarkers::MarkerHostRestriction` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "restricted": >-
        Is restricted to a specific type of host. When descriptions are silent about
        the range of hosts that a marker can combine with, but analyze the marker as an
        “affix”, we assume it is restricted.
      "semi-restricted": >-
        Can occur with some, but not all host elements (so, NOT a ‘phrasal affix’, but
        rather simply a ‘particle’-like formative that has some degree of selectional
        restrictions). Allows at least two distinct hosts (in terms of their parts of
        speech categories)
      "unrestricted": >-
        occurs with anything (e.g. Turkish mi)
  # -- end of NegationMarkerHostRestriction

  NounPluralMarkerHostRestriction:
    description: >-
      Value of `GrammaticalMarkers::MarkerHostRestriction` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "restricted": >-
        Is restricted to a specific type of host. When descriptions are silent about
        the range of hosts that a marker can combine with, but analyze the marker as an
        “affix”, we assume it is restricted.
      "semi-restricted": >-
        Can occur with some, but not all host elements (so, NOT a ‘phrasal affix’, but
        rather simply a ‘particle’-like formative that has some degree of selectional
        restrictions). Allows at least two distinct hosts (in terms of their parts of
        speech categories)
  # -- end of NounPluralMarkerHostRestriction

  CaseMarkerFusion:
    description: >-
      Value of `GrammaticalMarkers::MarkerFusion` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "isolating": >-
        The formative is a free phonological word. If it is, it is likely to be written
        as a separate word, though this is not always true: non-isolating formatives like
        clitics are often written as separate words, and isolating formatives are written
        with hyphens or clitic boundary markers. Therefore you will need to look at
        prosodic factors such as word stress.
      "concatenative": >-
        The formative is a clitic or segmentable affix. Word-level phonological processes
        (such as vowel harmony), word-internal kinds of sandhi, prosodic phenomena (such
        as word stress) or general inability to stand alone, identify a formative as
        concatenative (rather than an independent word). Unless there is evidence to the
        contrary, zeroes are coded as concatenative.
      "tonal": >-
        A tone contrast marks a morphological contrast. The tone must be not be the result
        of a general phonological sandhi rule, but represent true internal tone changes.
      "concatenative_and_ablaut": >-
        Concatenative formative plus ablaut (usually stem ablaut).
      "concatenative_or_ablaut": >-
        Concatenative formative or ablaut, neither one clearly primary (or both equally
        primary).
      "suppletive": >-
        One root or morpheme replaces another in part of a paradigm.
      "ablaut": >-
        Alternation of stem segments in some grammatical context. Distinct from
        phonologically conditioned alternation.
      "concatenative_or_suppletive": >-
        Concatenative formative or suppletion, under different conditions.
  # -- end of CaseMarkerFusion

  TenseMarkerFusion:
    description: >-
      Value of `GrammaticalMarkers::MarkerFusion` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "isolating": >-
        The formative is a free phonological word. If it is, it is likely to be written
        as a separate word, though this is not always true: non-isolating formatives like
        clitics are often written as separate words, and isolating formatives are written
        with hyphens or clitic boundary markers. Therefore you will need to look at
        prosodic factors such as word stress.
      "concatenative": >-
        The formative is a clitic or segmentable affix. Word-level phonological processes
        (such as vowel harmony), word-internal kinds of sandhi, prosodic phenomena (such
        as word stress) or general inability to stand alone, identify a formative as
        concatenative (rather than an independent word). Unless there is evidence to the
        contrary, zeroes are coded as concatenative.
      "isolating_or_concatenative": >-
        Isolating as regards stress, concatenative as regards segmental rules -- or vice
        versa.
      "reduplicative": >-
        A category is marked by some kind of reduplication effect
      "tonal": >-
        A tone contrast marks a morphological contrast. The tone must be not be the result
        of a general phonological sandhi rule, but represent true internal tone changes.
      "concatenative_and_ablaut": >-
        Concatenative formative plus ablaut (usually stem ablaut).
      "concatenative_or_ablaut": >-
        Concatenative formative or ablaut, neither one clearly primary (or both equally
        primary).
      "ablaut": >-
        Alternation of stem segments in some grammatical context. Distinct from
        phonologically conditioned alternation.
  # -- end of TenseMarkerFusion

  NegationMarkerFusion:
    description: >-
      Value of `GrammaticalMarkers::MarkerFusion` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "isolating": >-
        The formative is a free phonological word. If it is, it is likely to be written
        as a separate word, though this is not always true: non-isolating formatives like
        clitics are often written as separate words, and isolating formatives are written
        with hyphens or clitic boundary markers. Therefore you will need to look at
        prosodic factors such as word stress.
      "concatenative": >-
        The formative is a clitic or segmentable affix. Word-level phonological processes
        (such as vowel harmony), word-internal kinds of sandhi, prosodic phenomena (such
        as word stress) or general inability to stand alone, identify a formative as
        concatenative (rather than an independent word). Unless there is evidence to the
        contrary, zeroes are coded as concatenative.
      "isolating_or_concatenative": >-
        Isolating as regards stress, concatenative as regards segmental rules -- or vice
        versa.
      "isolating_then_concatenative": >-
        First part of the formative is isolating, second part is concatenative.
      "concatenative_then_isolating": >-
        First part of the formative is concatenative, second part is isolating.
      "tonal_or_ablaut_then_isolating": >-
        First part of the formative is a tonal or ablaut alternation; second part is
        isolating. Example: Kisi negation, where the verb stem undergoes tone changes and
        a particle is added (Childs, A Grammar of Kisi, 220ff.; Mouton de Gruyter 1995.
      "concatenative_default_or_isolating": >-
        Concatenative formative is default; isolating allomorph under certain conditions.
      "isolating_default_or_concatenative": >-
        Isolating formative is default; concatenative allomorph under certain conditions.
  # -- end of NegationMarkerFusion

  NounPluralMarkerFusion:
    description: >-
      Value of `GrammaticalMarkers::MarkerFusion` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "isolating": >-
        The formative is a free phonological word. If it is, it is likely to be written
        as a separate word, though this is not always true: non-isolating formatives like
        clitics are often written as separate words, and isolating formatives are written
        with hyphens or clitic boundary markers. Therefore you will need to look at
        prosodic factors such as word stress.
      "concatenative": >-
        The formative is a clitic or segmentable affix. Word-level phonological processes
        (such as vowel harmony), word-internal kinds of sandhi, prosodic phenomena (such
        as word stress) or general inability to stand alone, identify a formative as
        concatenative (rather than an independent word). Unless there is evidence to the
        contrary, zeroes are coded as concatenative.
      "reduplicative": >-
        A category is marked by some kind of reduplication effect
      "concatenative_and_reduplicative": >-
        Concatenative formative plus reduplication (usually reduplication of stem). If
        some lexemes take just the affix and others take the affix plus the reduplication,
        choose Concat + redupl and code for lexeme-based formative flexivity. (The
        flexivity lies in whether they do or do not take the reduplication part.)
      "concatenative_and_ablaut": >-
        Concatenative formative plus ablaut (usually stem ablaut).
      "concatenative_or_ablaut": >-
        Concatenative formative or ablaut, neither one clearly primary (or both equally
        primary).
      "replacive": >-
        The formative replaces a stem (or theme or base) segment. This is different from
        regularly concatenative formatives which alternate with other formatives, and
        not with stem segments. Examples: Marxist derived from Marxism (-ism replaces
        -ist) (Spencer in Spencer & Zwicky, Handbook of Morphology, 140; Oxford, 1998).
        In Slavic hypocoristics, after truncation, the stem-final consonant is replaced
        with /x/, e.g. Russ. smex ‘laughter’ < smej- ‘laugh’.
      "ablaut": >-
        Alternation of stem segments in some grammatical context. Distinct from
        phonologically conditioned alternation.
  # -- end of NounPluralMarkerFusion

  CaseMarkerFusionBinned6:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionBinned6` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "isolating": >-
        The formative is a free phonological word
      "concatenative": >-
        The formative is a clitic or segmentable affix
      "stem": >-
        Some kind of effect within the stem
      "tonal": >-
        A tone contrast
  # -- end of CaseMarkerFusionBinned6

  TenseMarkerFusionBinned6:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionBinned6` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "isolating": >-
        The formative is a free phonological word
      "concatenative": >-
        The formative is a clitic or segmentable affix
      "reduplicative": >-
        Some kind of reduplication effect
      "stem": >-
        Some kind of effect within the stem
      "tonal": >-
        A tone contrast
  # -- end of TenseMarkerFusionBinned6

  NegationMarkerFusionBinned6:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionBinned6` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "isolating": >-
        The formative is a free phonological word
      "concatenative": >-
        The formative is a clitic or segmentable affix
      "stem": >-
        Some kind of effect within the stem
  # -- end of NegationMarkerFusionBinned6

  NounPluralMarkerFusionBinned6:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionBinned6` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "isolating": >-
        The formative is a free phonological word
      "concatenative": >-
        The formative is a clitic or segmentable affix
      "reduplicative": >-
        Some kind of reduplication effect
      "replacive": >-
        The formative replaces the stem
      "stem": >-
        Some kind of effect within the stem
  # -- end of NounPluralMarkerFusionBinned6

  CaseMarkerFusionIsIsolating:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsIsolating` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerFusionIsIsolating

  TenseMarkerFusionIsIsolating:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsIsolating` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerFusionIsIsolating

  NegationMarkerFusionIsIsolating:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsIsolating` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerFusionIsIsolating

  NounPluralMarkerFusionIsIsolating:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsIsolating` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerFusionIsIsolating

  CaseMarkerFusionIsNonlinear:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsNonlinear` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerFusionIsNonlinear

  TenseMarkerFusionIsNonlinear:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsNonlinear` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerFusionIsNonlinear

  NegationMarkerFusionIsNonlinear:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsNonlinear` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerFusionIsNonlinear

  NounPluralMarkerFusionIsNonlinear:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsNonlinear` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerFusionIsNonlinear

  CaseMarkerFusionIsReduplicative:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsReduplicative` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerFusionIsReduplicative

  TenseMarkerFusionIsReduplicative:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsReduplicative` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerFusionIsReduplicative

  NegationMarkerFusionIsReduplicative:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsReduplicative` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerFusionIsReduplicative

  NounPluralMarkerFusionIsReduplicative:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsReduplicative` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerFusionIsReduplicative

  CaseMarkerFusionIsTonal:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsTonal` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerFusionIsTonal

  TenseMarkerFusionIsTonal:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsTonal` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerFusionIsTonal

  NegationMarkerFusionIsTonal:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsTonal` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerFusionIsTonal

  NounPluralMarkerFusionIsTonal:
    variant_of: MarkerFusion
    description: >-
      Value of `GrammaticalMarkers::MarkerFusionIsTonal` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerFusionIsTonal

  CaseMarkerStemFlexivity:
    description: >-
      Value of `GrammaticalMarkers::MarkerStemFlexivity` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "cat-based": >-
        Allomorphic variation determined by the choice of inflectional category (e.g., a
        certain stem ablaut in certain tense forms, across the regular lexicon)
      "lex-based": >-
        Allomorphic variation determined by the choice of lexical host (e.g., a certain
        stem ablaut with some verbs, but not with others)
      "none": >-
        No allomorphic variation
  # -- end of CaseMarkerStemFlexivity

  TenseMarkerStemFlexivity:
    description: >-
      Value of `GrammaticalMarkers::MarkerStemFlexivity` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "cat-based": >-
        Allomorphic variation determined by the choice of inflectional category (e.g., a
        certain stem ablaut in certain tense forms, across the regular lexicon)
      "lex-based": >-
        Allomorphic variation determined by the choice of lexical host (e.g., a certain
        stem ablaut with some verbs, but not with others)
      "none": >-
        No allomorphic variation
      "both": >-
        Allomorphic variation determined by both the inflectional category and the lexical
        host
  # -- end of TenseMarkerStemFlexivity

  NegationMarkerStemFlexivity:
    description: >-
      Value of `GrammaticalMarkers::MarkerStemFlexivity` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "cat-based": >-
        Allomorphic variation determined by the choice of inflectional category (e.g., a
        certain stem ablaut in certain tense forms, across the regular lexicon)
      "lex-based": >-
        Allomorphic variation determined by the choice of lexical host (e.g., a certain
        stem ablaut with some verbs, but not with others)
      "none": >-
        No allomorphic variation
  # -- end of NegationMarkerStemFlexivity

  NounPluralMarkerStemFlexivity:
    description: >-
      Value of `GrammaticalMarkers::MarkerStemFlexivity` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "cat-based": >-
        Allomorphic variation determined by the choice of inflectional category (e.g., a
        certain stem ablaut in certain tense forms, across the regular lexicon)
      "lex-based": >-
        Allomorphic variation determined by the choice of lexical host (e.g., a certain
        stem ablaut with some verbs, but not with others)
      "none": >-
        No allomorphic variation
  # -- end of NounPluralMarkerStemFlexivity

  CaseMarkerFormativeFlexivity:
    description: >-
      Value of `GrammaticalMarkers::MarkerFormativeFlexivity` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "cat-based": >-
        Allomorphic variation determined by the choice of inflectional category (e.g., a
        certain stem ablaut in certain tense forms, across the regular lexicon)
      "lex-based": >-
        Allomorphic variation determined by the choice of lexical host (e.g., a certain
        stem ablaut with some verbs, but not with others)
      "none": >-
        No allomorphic variation
      "both": >-
        Allomorphic variation determined by both the inflectional category and the lexical
        host
  # -- end of CaseMarkerFormativeFlexivity

  TenseMarkerFormativeFlexivity:
    description: >-
      Value of `GrammaticalMarkers::MarkerFormativeFlexivity` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "cat-based": >-
        Allomorphic variation determined by the choice of inflectional category (e.g., a
        certain stem ablaut in certain tense forms, across the regular lexicon)
      "lex-based": >-
        Allomorphic variation determined by the choice of lexical host (e.g., a certain
        stem ablaut with some verbs, but not with others)
      "none": >-
        No allomorphic variation
  # -- end of TenseMarkerFormativeFlexivity

  NegationMarkerFormativeFlexivity:
    description: >-
      Value of `GrammaticalMarkers::MarkerFormativeFlexivity` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "cat-based": >-
        Allomorphic variation determined by the choice of inflectional category (e.g., a
        certain stem ablaut in certain tense forms, across the regular lexicon)
      "lex-based": >-
        Allomorphic variation determined by the choice of lexical host (e.g., a certain
        stem ablaut with some verbs, but not with others)
      "none": >-
        No allomorphic variation
      "both": >-
        Allomorphic variation determined by both the inflectional category and the lexical
        host
  # -- end of NegationMarkerFormativeFlexivity

  NounPluralMarkerFormativeFlexivity:
    description: >-
      Value of `GrammaticalMarkers::MarkerFormativeFlexivity` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "cat-based": >-
        Allomorphic variation determined by the choice of inflectional category (e.g., a
        certain stem ablaut in certain tense forms, across the regular lexicon)
      "lex-based": >-
        Allomorphic variation determined by the choice of lexical host (e.g., a certain
        stem ablaut with some verbs, but not with others)
      "none": >-
        No allomorphic variation
  # -- end of NounPluralMarkerFormativeFlexivity

  CaseMarkerPosition:
    description: >-
      Value of `GrammaticalMarkers::MarkerPosition` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        before the phonological host
      "in": >-
        inside the phonological host
      "post": >-
        after the phonological host
      "post (in)": >-
        after the phonological host by default, inside the host under exceptional
        conditions (typically lexical)
  # -- end of CaseMarkerPosition

  TenseMarkerPosition:
    description: >-
      Value of `GrammaticalMarkers::MarkerPosition` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        before the phonological host
      "in": >-
        inside the phonological host
      "post": >-
        after the phonological host
      "simul": >-
        the formative has two exponents at different positions in the phonological host
        (but it is not the case that one is positioned before and the other after the
        host, which is coded as “circum”)
      "circum": >-
        the formative has two exponents, one before and one after the phonological host.
        This is a special case of the “simul” position
      "prae/post": >-
        either before or after the phonological host, conditioned by some structural
        context (category, syntax etc.)
      "in/prae": >-
        either inside or before the phonological host, conditioned by some structural
        context (category, syntax etc.)
      "in/post": >-
        either inside or after the phonological host, conditioned by some structural
        context (category, syntax etc.)
  # -- end of TenseMarkerPosition

  NegationMarkerPosition:
    description: >-
      Value of `GrammaticalMarkers::MarkerPosition` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        before the phonological host
      "post": >-
        after the phonological host
      "simul": >-
        the formative has two exponents at different positions in the phonological host
        (but it is not the case that one is positioned before and the other after the
        host, which is coded as “circum”)
      "circum": >-
        the formative has two exponents, one before and one after the phonological host.
        This is a special case of the “simul” position
      "prae/post": >-
        either before or after the phonological host, conditioned by some structural
        context (category, syntax etc.)
      "post (circum)": >-
        after the phonological host by default, around the host under exceptional
        conditions (typically lexical)
      "circum (prae)": >-
        around the phonological host by default, before the host under exceptional
        conditions (typically lexical)
      "prae (circum)": >-
        before the phonological host by default, around the host under exceptional
        conditions (typically lexical)
      "circum (post)": >-
        around the phonological host by default, after the host under exceptional
        conditions (typically lexical)
      "circum (W)": >-
        DO NOT USE (Wackernagel is defined as Behavior = Initial and Position = post) --
        see log 77
      "simul (prae)": >-
        in two or more different positions in (but not around) the phonological host by
        default, before the host under exceptional conditions (typically lexical)
  # -- end of NegationMarkerPosition

  NounPluralMarkerPosition:
    description: >-
      Value of `GrammaticalMarkers::MarkerPosition` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        before the phonological host
      "in": >-
        inside the phonological host
      "post": >-
        after the phonological host
      "simul": >-
        the formative has two exponents at different positions in the phonological host
        (but it is not the case that one is positioned before and the other after the
        host, which is coded as “circum”)
      "in/post": >-
        either inside or after the phonological host, conditioned by some structural
        context (category, syntax etc.)
      "prae/circum": >-
        either before or around the phonological host, conditioned by some structural
        context (category, syntax etc.)
      "prae/post/circum": >-
        either before, after or around the phonological host, conditioned by some
        structural context (category, syntax etc.)
  # -- end of NounPluralMarkerPosition

  CaseMarkerPositionBinned4:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerPositionBinned4` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        Marker occurs before its phonological host
      "in/simul": >-
        Marker occurs inside its phonological host
      "post": >-
        Marker occurs after its phonological host
  # -- end of CaseMarkerPositionBinned4

  TenseMarkerPositionBinned4:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerPositionBinned4` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        Marker occurs before its phonological host
      "in/simul": >-
        Marker occurs inside its phonological host
      "post": >-
        Marker occurs after its phonological host
      "split": >-
        Marker has multiple parts that occur at different positions
  # -- end of TenseMarkerPositionBinned4

  NegationMarkerPositionBinned4:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerPositionBinned4` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        Marker occurs before its phonological host
      "in/simul": >-
        Marker occurs inside its phonological host
      "post": >-
        Marker occurs after its phonological host
      "split": >-
        Marker has multiple parts that occur at different positions
  # -- end of NegationMarkerPositionBinned4

  NounPluralMarkerPositionBinned4:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerPositionBinned4` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        Marker occurs before its phonological host
      "in/simul": >-
        Marker occurs inside its phonological host
      "post": >-
        Marker occurs after its phonological host
      "split": >-
        Marker has multiple parts that occur at different positions
  # -- end of NounPluralMarkerPositionBinned4

  CaseMarkerPositionBinned5:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerPositionBinned5` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        Marker occurs before its phonological host
      "in": >-
        Marker occurs inside its phonological host
      "post": >-
        Marker occurs after its phonological host
  # -- end of CaseMarkerPositionBinned5

  TenseMarkerPositionBinned5:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerPositionBinned5` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        Marker occurs before its phonological host
      "in": >-
        Marker occurs inside its phonological host
      "post": >-
        Marker occurs after its phonological host
      "split": >-
        Marker has multiple parts that occur at different positions (before or after)
      "simul": >-
        Marker has multiple parts that occur at different positions inside the host
  # -- end of TenseMarkerPositionBinned5

  NegationMarkerPositionBinned5:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerPositionBinned5` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        Marker occurs before its phonological host
      "post": >-
        Marker occurs after its phonological host
      "split": >-
        Marker has multiple parts that occur at different positions (before or after)
      "simul": >-
        Marker has multiple parts that occur at different positions inside the host
  # -- end of NegationMarkerPositionBinned5

  NounPluralMarkerPositionBinned5:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerPositionBinned5` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "prae": >-
        Marker occurs before its phonological host
      "in": >-
        Marker occurs inside its phonological host
      "post": >-
        Marker occurs after its phonological host
      "split": >-
        Marker has multiple parts that occur at different positions (before or after)
      "simul": >-
        Marker has multiple parts that occur at different positions inside the host
  # -- end of NounPluralMarkerPositionBinned5

  CaseMarkerHasPreposedExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPreposedExponent` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerHasPreposedExponent

  TenseMarkerHasPreposedExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPreposedExponent` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerHasPreposedExponent

  NegationMarkerHasPreposedExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPreposedExponent` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerHasPreposedExponent

  NounPluralMarkerHasPreposedExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPreposedExponent` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerHasPreposedExponent

  CaseMarkerHasPreposedDefaultExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPreposedDefaultExponent` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerHasPreposedDefaultExponent

  TenseMarkerHasPreposedDefaultExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPreposedDefaultExponent` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerHasPreposedDefaultExponent

  NegationMarkerHasPreposedDefaultExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPreposedDefaultExponent` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerHasPreposedDefaultExponent

  NounPluralMarkerHasPreposedDefaultExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPreposedDefaultExponent` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerHasPreposedDefaultExponent

  CaseMarkerHasPostposedExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPostposedExponent` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerHasPostposedExponent

  TenseMarkerHasPostposedExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPostposedExponent` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerHasPostposedExponent

  NegationMarkerHasPostposedExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPostposedExponent` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerHasPostposedExponent

  NounPluralMarkerHasPostposedExponent:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasPostposedExponent` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerHasPostposedExponent

  CaseMarkerHasMultipleExponents:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasMultipleExponents` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerHasMultipleExponents

  TenseMarkerHasMultipleExponents:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasMultipleExponents` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerHasMultipleExponents

  NegationMarkerHasMultipleExponents:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasMultipleExponents` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerHasMultipleExponents

  NounPluralMarkerHasMultipleExponents:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasMultipleExponents` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerHasMultipleExponents

  CaseMarkerHasMultipleDefaultExponents:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasMultipleDefaultExponents` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerHasMultipleDefaultExponents

  TenseMarkerHasMultipleDefaultExponents:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasMultipleDefaultExponents` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerHasMultipleDefaultExponents

  NegationMarkerHasMultipleDefaultExponents:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasMultipleDefaultExponents` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerHasMultipleDefaultExponents

  NounPluralMarkerHasMultipleDefaultExponents:
    variant_of: MarkerPosition
    description: >-
      Value of `GrammaticalMarkers::MarkerHasMultipleDefaultExponents` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerHasMultipleDefaultExponents

  CaseMarkerBehavior:
    description: >-
      Value of `GrammaticalMarkers::MarkerBehavior` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "inert": >-
        Not spreading, not stacking. Default for non-phrasal elements.
      "spreading": >-
        See Bickel & Nichols, ‘Inflectional morphology’ in Shopen ed., Language Typology
        and Syntactic Description (CUP 2007)
      "stacking": >-
        See Bickel & Nichols, ‘Inflectional morphology’ in Shopen ed., Language Typology
        and Syntactic Description, (CUP 2007)
      "final": >-
        Inert and at the end of its domain (e.g. at the end of the clause for TAM markers,
        or at the end of the NP for case markers)
      "initial": >-
        Inert and at the beginning (first element) of its domain (e.g. at the first
        element of the clause for TAM markers, or at the beginning of the NP for case
        markers). Combined with a “post” value in position, a “following” value in
        Placement, and freedom of hosts, this is a typical Wackernagel clitic.
      "on head": >-
        Inert and positioned on the head of its domain: V for TAM, N for case. This
        is typical for suffixes. Since clitics are typically insensitive to the host
        category, their placement is regulated by more abstract positions (initial, final,
        penultimate, pre-initial etc.) rather than the head. “On head” is used only with
        phrases where the head can vary its position.
      "flexible": >-
        Inert and freely positioned within its domain (ie. position is not defined with
        respect to H or D but by something else).
  # -- end of CaseMarkerBehavior

  TenseMarkerBehavior:
    description: >-
      Value of `GrammaticalMarkers::MarkerBehavior` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "inert": >-
        Not spreading, not stacking. Default for non-phrasal elements.
      "final": >-
        Inert and at the end of its domain (e.g. at the end of the clause for TAM markers,
        or at the end of the NP for case markers)
      "initial": >-
        Inert and at the beginning (first element) of its domain (e.g. at the first
        element of the clause for TAM markers, or at the beginning of the NP for case
        markers). Combined with a “post” value in position, a “following” value in
        Placement, and freedom of hosts, this is a typical Wackernagel clitic.
      "flexible": >-
        Inert and freely positioned within its domain (ie. position is not defined with
        respect to H or D but by something else).
  # -- end of TenseMarkerBehavior

  NegationMarkerBehavior:
    description: >-
      Value of `GrammaticalMarkers::MarkerBehavior` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "inert": >-
        Not spreading, not stacking. Default for non-phrasal elements.
      "final": >-
        Inert and at the end of its domain (e.g. at the end of the clause for TAM markers,
        or at the end of the NP for case markers)
      "initial": >-
        Inert and at the beginning (first element) of its domain (e.g. at the first
        element of the clause for TAM markers, or at the beginning of the NP for case
        markers). Combined with a “post” value in position, a “following” value in
        Placement, and freedom of hosts, this is a typical Wackernagel clitic.
      "on head": >-
        Inert and positioned on the head of its domain: V for TAM, N for case. This
        is typical for suffixes. Since clitics are typically insensitive to the host
        category, their placement is regulated by more abstract positions (initial, final,
        penultimate, pre-initial etc.) rather than the head. “On head” is used only with
        phrases where the head can vary its position.
      "flexible": >-
        Inert and freely positioned within its domain (ie. position is not defined with
        respect to H or D but by something else).
      "on head and final": >-
        Simultaneously on head and final.
      "on head and initial": >-
        Simultaneously on head and initial.
  # -- end of NegationMarkerBehavior

  NounPluralMarkerBehavior:
    description: >-
      Value of `GrammaticalMarkers::MarkerBehavior` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "inert": >-
        Not spreading, not stacking. Default for non-phrasal elements.
      "spreading": >-
        See Bickel & Nichols, ‘Inflectional morphology’ in Shopen ed., Language Typology
        and Syntactic Description (CUP 2007)
      "stacking": >-
        See Bickel & Nichols, ‘Inflectional morphology’ in Shopen ed., Language Typology
        and Syntactic Description, (CUP 2007)
      "final": >-
        Inert and at the end of its domain (e.g. at the end of the clause for TAM markers,
        or at the end of the NP for case markers)
      "initial": >-
        Inert and at the beginning (first element) of its domain (e.g. at the first
        element of the clause for TAM markers, or at the beginning of the NP for case
        markers). Combined with a “post” value in position, a “following” value in
        Placement, and freedom of hosts, this is a typical Wackernagel clitic.
      "flexible": >-
        Inert and freely positioned within its domain (ie. position is not defined with
        respect to H or D but by something else).
  # -- end of NounPluralMarkerBehavior

  CaseMarkerBehaviorBinned4:
    variant_of: MarkerBehavior
    description: >-
      Value of `GrammaticalMarkers::MarkerBehaviorBinned4` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "initial": >-
        Inert and at the beginning of its domain
      "final": >-
        Inert and at the end of its domain
      "on head": >-
        Inert and positioned on the head of its domain
      "spreading": >-
        See Bickel & Nichols, ‘Inflectional morphology’ in Shopen ed., Language Typology
        and Syntactic Description (CUP 2007)
  # -- end of CaseMarkerBehaviorBinned4

  TenseMarkerBehaviorBinned4:
    variant_of: MarkerBehavior
    description: >-
      Value of `GrammaticalMarkers::MarkerBehaviorBinned4` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "initial": >-
        Inert and at the beginning of its domain
      "final": >-
        Inert and at the end of its domain
  # -- end of TenseMarkerBehaviorBinned4

  NegationMarkerBehaviorBinned4:
    variant_of: MarkerBehavior
    description: >-
      Value of `GrammaticalMarkers::MarkerBehaviorBinned4` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "initial": >-
        Inert and at the beginning of its domain
      "final": >-
        Inert and at the end of its domain
      "on head": >-
        Inert and positioned on the head of its domain
  # -- end of NegationMarkerBehaviorBinned4

  NounPluralMarkerBehaviorBinned4:
    variant_of: MarkerBehavior
    description: >-
      Value of `GrammaticalMarkers::MarkerBehaviorBinned4` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: value-list
    values: 
      "initial": >-
        Inert and at the beginning of its domain
      "final": >-
        Inert and at the end of its domain
      "spreading": >-
        See Bickel & Nichols, ‘Inflectional morphology’ in Shopen ed., Language Typology
        and Syntactic Description (CUP 2007)
  # -- end of NounPluralMarkerBehaviorBinned4

  CaseMarkerBehaviorIsSpreading:
    variant_of: MarkerBehavior
    description: >-
      Value of `GrammaticalMarkers::MarkerBehaviorIsSpreading` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerBehaviorIsSpreading

  TenseMarkerBehaviorIsSpreading:
    variant_of: MarkerBehavior
    description: >-
      Value of `GrammaticalMarkers::MarkerBehaviorIsSpreading` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerBehaviorIsSpreading

  NegationMarkerBehaviorIsSpreading:
    variant_of: MarkerBehavior
    description: >-
      Value of `GrammaticalMarkers::MarkerBehaviorIsSpreading` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerBehaviorIsSpreading

  NounPluralMarkerBehaviorIsSpreading:
    variant_of: MarkerBehavior
    description: >-
      Value of `GrammaticalMarkers::MarkerBehaviorIsSpreading` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerBehaviorIsSpreading

  CaseMarkerExpressedCategoriesCount:
    description: >-
      Value of `GrammaticalMarkers::MarkerExpressedCategoriesCount` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: integer
  # -- end of CaseMarkerExpressedCategoriesCount

  TenseMarkerExpressedCategoriesCount:
    description: >-
      Value of `GrammaticalMarkers::MarkerExpressedCategoriesCount` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: integer
  # -- end of TenseMarkerExpressedCategoriesCount

  NegationMarkerExpressedCategoriesCount:
    description: >-
      Value of `GrammaticalMarkers::MarkerExpressedCategoriesCount` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: integer
  # -- end of NegationMarkerExpressedCategoriesCount

  NounPluralMarkerExpressedCategoriesCount:
    description: >-
      Value of `GrammaticalMarkers::MarkerExpressedCategoriesCount` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: integer
  # -- end of NounPluralMarkerExpressedCategoriesCount

  CaseMarkerExpressesMultipleCategories:
    description: >-
      Value of `GrammaticalMarkers::MarkerExpressesMultipleCategories` for exemplar "Case"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of CaseMarkerExpressesMultipleCategories

  TenseMarkerExpressesMultipleCategories:
    description: >-
      Value of `GrammaticalMarkers::MarkerExpressesMultipleCategories` for exemplar "Tense"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of TenseMarkerExpressesMultipleCategories

  NegationMarkerExpressesMultipleCategories:
    description: >-
      Value of `GrammaticalMarkers::MarkerExpressesMultipleCategories` for exemplar "Negation"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NegationMarkerExpressesMultipleCategories

  NounPluralMarkerExpressesMultipleCategories:
    description: >-
      Value of `GrammaticalMarkers::MarkerExpressesMultipleCategories` for exemplar "Noun Plural"
    kind: computed data (aggregation-scripts/GrammaticalMarkers.R)
    data: logical
  # -- end of NounPluralMarkerExpressesMultipleCategories
